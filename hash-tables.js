// Хэш-таблица — это структура данных, которая хранит пары ключ–значение и использует хэш-функцию для быстрого доступа к данным.
// В JavaScript хэш-таблицы реализованы объектами ({}) и Map.

// 1. Обьект
// Особенности:
//     Ключи — всегда строки (или преобразуются в строки).
//     Нет гарантии порядка.
//     Может иметь ключи из прототипа (toString, hasOwnProperty и т.д.), если не создан через Object.create(null).
const obj = {
  name: "Alice",
  age: 30,
};

// запись
obj["city"] = "Paris";

// чтение
const obj_name = obj["name"];

// удаление
delete obj["age"];

// 2. Map
// Особенности:
//     Ключи могут быть любого типа (включая объекты, функции, NaN).
//     Сохраняет порядок вставки.
//     У Map нет наследуемых ключей — только то, что ты сам добавил.
const map = new Map();

// запись
map.set("name", "Alice");
map.set("age", 30);

// чтение
const map_name = map.get("name");

// удаление
map.delete("age");

// ⚡ Сравнение операций по скорости (Big O)
// | Операция             | Массив (`Array`)                                     | Объект (`{}`) | Map (`Map`) |
// | -------------------- | ---------------------------------------------------- | ------------- | ----------- |
// | **Чтение**           | O(n) (по значению)<br>O(1) (по индексу)              | O(1)          | O(1)        |
// | **Запись**           | O(1) (в конец)<br>O(n) (вставка/удаление в середине) | O(1)          | O(1)        |
// | **Удаление**         | O(n) (по значению)<br>O(1) (по индексу в конец)      | O(1)          | O(1)        |
// | **Поиск (по ключу)** | O(n) (find, includes)                                | O(1)          | O(1)        |

//  Объяснения:
//     В массиве поиск по индексу быстрый — O(1), но поиск по значению → O(n), так как приходится перебирать элементы.
//     В объекте и Map, благодаря хэш-функциям, доступ по ключу — почти всегда O(1).
//     Map обычно чуть быстрее, если нужны частые вставки/удаления большого количества данных, и он безопаснее с точки зрения типов ключей.

// Когда что использовать?
// | Если…                               | Используй   |
// | ----------------------------------- | ----------- |
// | Ключи — всегда строки, нужно просто | Объект `{}` |
// | Ключи — любые типы, важен порядок   | Map         |
// | Только индексированный доступ       | Array       |
